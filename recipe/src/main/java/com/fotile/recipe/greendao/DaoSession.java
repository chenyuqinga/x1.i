package com.fotile.recipe.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.fotile.recipe.bean.recipe.DAIngredient;
import com.fotile.recipe.bean.recipe.DBIngredient;
import com.fotile.recipe.bean.recipe.DCIngredient;
import com.fotile.recipe.bean.recipe.DCookingPromptsInfo;
import com.fotile.recipe.bean.recipe.DCookingStep;
import com.fotile.recipe.bean.recipe.DDevice;
import com.fotile.recipe.bean.recipe.DDIngredient;
import com.fotile.recipe.bean.recipe.DMajorIngredient;
import com.fotile.recipe.bean.recipe.DMinorIngredient;
import com.fotile.recipe.bean.recipe.DProducts;
import com.fotile.recipe.bean.recipe.DPromptContent;
import com.fotile.recipe.bean.recipe.DProperties;
import com.fotile.recipe.bean.recipe.DReadyStep;
import com.fotile.recipe.bean.recipe.DRecipe;
import com.fotile.recipe.bean.recipe.DRecipeBanner;
import com.fotile.recipe.bean.recipe.DRecipeCategory;

import com.fotile.recipe.greendao.DAIngredientDao;
import com.fotile.recipe.greendao.DBIngredientDao;
import com.fotile.recipe.greendao.DCIngredientDao;
import com.fotile.recipe.greendao.DCookingPromptsInfoDao;
import com.fotile.recipe.greendao.DCookingStepDao;
import com.fotile.recipe.greendao.DDeviceDao;
import com.fotile.recipe.greendao.DDIngredientDao;
import com.fotile.recipe.greendao.DMajorIngredientDao;
import com.fotile.recipe.greendao.DMinorIngredientDao;
import com.fotile.recipe.greendao.DProductsDao;
import com.fotile.recipe.greendao.DPromptContentDao;
import com.fotile.recipe.greendao.DPropertiesDao;
import com.fotile.recipe.greendao.DReadyStepDao;
import com.fotile.recipe.greendao.DRecipeDao;
import com.fotile.recipe.greendao.DRecipeBannerDao;
import com.fotile.recipe.greendao.DRecipeCategoryDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig dAIngredientDaoConfig;
    private final DaoConfig dBIngredientDaoConfig;
    private final DaoConfig dCIngredientDaoConfig;
    private final DaoConfig dCookingPromptsInfoDaoConfig;
    private final DaoConfig dCookingStepDaoConfig;
    private final DaoConfig dDeviceDaoConfig;
    private final DaoConfig dDIngredientDaoConfig;
    private final DaoConfig dMajorIngredientDaoConfig;
    private final DaoConfig dMinorIngredientDaoConfig;
    private final DaoConfig dProductsDaoConfig;
    private final DaoConfig dPromptContentDaoConfig;
    private final DaoConfig dPropertiesDaoConfig;
    private final DaoConfig dReadyStepDaoConfig;
    private final DaoConfig dRecipeDaoConfig;
    private final DaoConfig dRecipeBannerDaoConfig;
    private final DaoConfig dRecipeCategoryDaoConfig;

    private final DAIngredientDao dAIngredientDao;
    private final DBIngredientDao dBIngredientDao;
    private final DCIngredientDao dCIngredientDao;
    private final DCookingPromptsInfoDao dCookingPromptsInfoDao;
    private final DCookingStepDao dCookingStepDao;
    private final DDeviceDao dDeviceDao;
    private final DDIngredientDao dDIngredientDao;
    private final DMajorIngredientDao dMajorIngredientDao;
    private final DMinorIngredientDao dMinorIngredientDao;
    private final DProductsDao dProductsDao;
    private final DPromptContentDao dPromptContentDao;
    private final DPropertiesDao dPropertiesDao;
    private final DReadyStepDao dReadyStepDao;
    private final DRecipeDao dRecipeDao;
    private final DRecipeBannerDao dRecipeBannerDao;
    private final DRecipeCategoryDao dRecipeCategoryDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        dAIngredientDaoConfig = daoConfigMap.get(DAIngredientDao.class).clone();
        dAIngredientDaoConfig.initIdentityScope(type);

        dBIngredientDaoConfig = daoConfigMap.get(DBIngredientDao.class).clone();
        dBIngredientDaoConfig.initIdentityScope(type);

        dCIngredientDaoConfig = daoConfigMap.get(DCIngredientDao.class).clone();
        dCIngredientDaoConfig.initIdentityScope(type);

        dCookingPromptsInfoDaoConfig = daoConfigMap.get(DCookingPromptsInfoDao.class).clone();
        dCookingPromptsInfoDaoConfig.initIdentityScope(type);

        dCookingStepDaoConfig = daoConfigMap.get(DCookingStepDao.class).clone();
        dCookingStepDaoConfig.initIdentityScope(type);

        dDeviceDaoConfig = daoConfigMap.get(DDeviceDao.class).clone();
        dDeviceDaoConfig.initIdentityScope(type);

        dDIngredientDaoConfig = daoConfigMap.get(DDIngredientDao.class).clone();
        dDIngredientDaoConfig.initIdentityScope(type);

        dMajorIngredientDaoConfig = daoConfigMap.get(DMajorIngredientDao.class).clone();
        dMajorIngredientDaoConfig.initIdentityScope(type);

        dMinorIngredientDaoConfig = daoConfigMap.get(DMinorIngredientDao.class).clone();
        dMinorIngredientDaoConfig.initIdentityScope(type);

        dProductsDaoConfig = daoConfigMap.get(DProductsDao.class).clone();
        dProductsDaoConfig.initIdentityScope(type);

        dPromptContentDaoConfig = daoConfigMap.get(DPromptContentDao.class).clone();
        dPromptContentDaoConfig.initIdentityScope(type);

        dPropertiesDaoConfig = daoConfigMap.get(DPropertiesDao.class).clone();
        dPropertiesDaoConfig.initIdentityScope(type);

        dReadyStepDaoConfig = daoConfigMap.get(DReadyStepDao.class).clone();
        dReadyStepDaoConfig.initIdentityScope(type);

        dRecipeDaoConfig = daoConfigMap.get(DRecipeDao.class).clone();
        dRecipeDaoConfig.initIdentityScope(type);

        dRecipeBannerDaoConfig = daoConfigMap.get(DRecipeBannerDao.class).clone();
        dRecipeBannerDaoConfig.initIdentityScope(type);

        dRecipeCategoryDaoConfig = daoConfigMap.get(DRecipeCategoryDao.class).clone();
        dRecipeCategoryDaoConfig.initIdentityScope(type);

        dAIngredientDao = new DAIngredientDao(dAIngredientDaoConfig, this);
        dBIngredientDao = new DBIngredientDao(dBIngredientDaoConfig, this);
        dCIngredientDao = new DCIngredientDao(dCIngredientDaoConfig, this);
        dCookingPromptsInfoDao = new DCookingPromptsInfoDao(dCookingPromptsInfoDaoConfig, this);
        dCookingStepDao = new DCookingStepDao(dCookingStepDaoConfig, this);
        dDeviceDao = new DDeviceDao(dDeviceDaoConfig, this);
        dDIngredientDao = new DDIngredientDao(dDIngredientDaoConfig, this);
        dMajorIngredientDao = new DMajorIngredientDao(dMajorIngredientDaoConfig, this);
        dMinorIngredientDao = new DMinorIngredientDao(dMinorIngredientDaoConfig, this);
        dProductsDao = new DProductsDao(dProductsDaoConfig, this);
        dPromptContentDao = new DPromptContentDao(dPromptContentDaoConfig, this);
        dPropertiesDao = new DPropertiesDao(dPropertiesDaoConfig, this);
        dReadyStepDao = new DReadyStepDao(dReadyStepDaoConfig, this);
        dRecipeDao = new DRecipeDao(dRecipeDaoConfig, this);
        dRecipeBannerDao = new DRecipeBannerDao(dRecipeBannerDaoConfig, this);
        dRecipeCategoryDao = new DRecipeCategoryDao(dRecipeCategoryDaoConfig, this);

        registerDao(DAIngredient.class, dAIngredientDao);
        registerDao(DBIngredient.class, dBIngredientDao);
        registerDao(DCIngredient.class, dCIngredientDao);
        registerDao(DCookingPromptsInfo.class, dCookingPromptsInfoDao);
        registerDao(DCookingStep.class, dCookingStepDao);
        registerDao(DDevice.class, dDeviceDao);
        registerDao(DDIngredient.class, dDIngredientDao);
        registerDao(DMajorIngredient.class, dMajorIngredientDao);
        registerDao(DMinorIngredient.class, dMinorIngredientDao);
        registerDao(DProducts.class, dProductsDao);
        registerDao(DPromptContent.class, dPromptContentDao);
        registerDao(DProperties.class, dPropertiesDao);
        registerDao(DReadyStep.class, dReadyStepDao);
        registerDao(DRecipe.class, dRecipeDao);
        registerDao(DRecipeBanner.class, dRecipeBannerDao);
        registerDao(DRecipeCategory.class, dRecipeCategoryDao);
    }
    
    public void clear() {
        dAIngredientDaoConfig.clearIdentityScope();
        dBIngredientDaoConfig.clearIdentityScope();
        dCIngredientDaoConfig.clearIdentityScope();
        dCookingPromptsInfoDaoConfig.clearIdentityScope();
        dCookingStepDaoConfig.clearIdentityScope();
        dDeviceDaoConfig.clearIdentityScope();
        dDIngredientDaoConfig.clearIdentityScope();
        dMajorIngredientDaoConfig.clearIdentityScope();
        dMinorIngredientDaoConfig.clearIdentityScope();
        dProductsDaoConfig.clearIdentityScope();
        dPromptContentDaoConfig.clearIdentityScope();
        dPropertiesDaoConfig.clearIdentityScope();
        dReadyStepDaoConfig.clearIdentityScope();
        dRecipeDaoConfig.clearIdentityScope();
        dRecipeBannerDaoConfig.clearIdentityScope();
        dRecipeCategoryDaoConfig.clearIdentityScope();
    }

    public DAIngredientDao getDAIngredientDao() {
        return dAIngredientDao;
    }

    public DBIngredientDao getDBIngredientDao() {
        return dBIngredientDao;
    }

    public DCIngredientDao getDCIngredientDao() {
        return dCIngredientDao;
    }

    public DCookingPromptsInfoDao getDCookingPromptsInfoDao() {
        return dCookingPromptsInfoDao;
    }

    public DCookingStepDao getDCookingStepDao() {
        return dCookingStepDao;
    }

    public DDeviceDao getDDeviceDao() {
        return dDeviceDao;
    }

    public DDIngredientDao getDDIngredientDao() {
        return dDIngredientDao;
    }

    public DMajorIngredientDao getDMajorIngredientDao() {
        return dMajorIngredientDao;
    }

    public DMinorIngredientDao getDMinorIngredientDao() {
        return dMinorIngredientDao;
    }

    public DProductsDao getDProductsDao() {
        return dProductsDao;
    }

    public DPromptContentDao getDPromptContentDao() {
        return dPromptContentDao;
    }

    public DPropertiesDao getDPropertiesDao() {
        return dPropertiesDao;
    }

    public DReadyStepDao getDReadyStepDao() {
        return dReadyStepDao;
    }

    public DRecipeDao getDRecipeDao() {
        return dRecipeDao;
    }

    public DRecipeBannerDao getDRecipeBannerDao() {
        return dRecipeBannerDao;
    }

    public DRecipeCategoryDao getDRecipeCategoryDao() {
        return dRecipeCategoryDao;
    }

}
